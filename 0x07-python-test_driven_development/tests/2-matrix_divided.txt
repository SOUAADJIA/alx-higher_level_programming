The ``2-matrix_divided`` module 
===============================

Using ``matrix_divided``
---------------------

This is a text file in reStructured Text format. First, import ``matrix_divided`` from the ``2-matrix_divided`` module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

Test a Basic Matrix with Positive Division
-----------------------------------------------------------------------------------------
>>> matrix_divided([[10, 20, 30], [40, 50, 60]], 5)
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

Test a Basic Matrix with Negative Division
-----------------------------------------------------------------------------------------
>>> matrix_divided([[10, 20, 30], [40, 50, 60]], -2)
[[-5.0, -10.0, -15.0], [-20.0, -25.0, -30.0]]

Test for Empty Matrix
-----------------------------------------------------------------------------------------
>>> matrix_divided([], 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test for Empty Row
----------------------------------------------------------------------------------------
>>> matrix_divided([[]], 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test None Instead of Matrix
----------------------------------------------------------------------------------------
>>> matrix_divided(None, 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test Without Matrix
----------------------------------------------------------------------------------------
>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test Integers and Floats in Matrix
----------------------------------------------------------------------------------------
>>> matrix_divided([[1, 2.5, 3.8], [4.1, 5, 6]], 1.5)
[[0.67, 1.67, 2.53], [2.73, 3.33, 4.0]]

Test Int Instead of Matrix
----------------------------------------------------------------------------------------
>>> matrix_divided(5, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test Tuple Instead of Matrix
----------------------------------------------------------------------------------------
>>> matrix_divided((1, 2, 3), 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test Unequal Rows
---------------------------------------------------------------------------------------
>>> matrix_divided([[1, 2, 3], [4, 5]], 1)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

Matrix with Only Zero
---------------------------------------------------------------------------------------
>>> matrix_divided([[0]], 1)
[[0.0]]

Only Integers and Floats Allowed
---------------------------------------------------------------------------------------
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "Python")
Traceback (most recent call last):
    ...
TypeError: div must be a number

Test Divide by Zero
---------------------------------------------------------------------------------------
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

Test Infinite Number
---------------------------------------------------------------------------------------
>>> matrix_divided([[1, 2], [3, 4]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

Test NaN
---------------------------------------------------------------------------------------
>>> matrix_divided([[0]], float('nan'))
[[nan]]
