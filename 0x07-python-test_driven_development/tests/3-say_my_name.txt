The ``3-say_my_name`` module
============================

Using ``say_my_name``
---------------------

This is a text file in reStructured Text format. First import ``say_my_name`` from the ``3-say_my_name`` module:

>>> say_my_name = __import__('3-say_my_name').say_my_name

Now use it:

Test basic
------------------------------------------------------------------------------

Test case 1: Print full name
----------------------------
>>> say_my_name("Souaad", "JIA")
My name is Souaad JIA

Test case 2: Print only first name
__________________________________
>>> say_my_name("Bob")
My name is Bob

Test case 3: Raise error if first_name is not a string
------------------------------------------------------
>>> say_my_name(12, "White")
Traceback (most recent call last):
    ...
TypeError: first_name must be a string

Test case 4: Raise error if last_name is not a string
-----------------------------------------------------
>>> say_my_name("Walter", (1, 2, 3))
Traceback (most recent call last):
    ...
TypeError: last_name must be a string

Test case 5: Print with empty strings
-------------------------------------
>>> say_my_name("", "")
My name is  

Test case 6: Raise error if first_name is None
----------------------------------------------
>>> say_my_name(None)
Traceback (most recent call last):
    ...
TypeError: first_name must be a string

Test case 7: Raise error if no arguments provided
-------------------------------------------------
>>> say_my_name()
Traceback (most recent call last):
    ...
TypeError: say_my_name() missing 1 required positional argument: 'first_name'
